{{- $host := ( index .Values.ingress.hosts 0 ) -}}
{{- $scheme := ( $host.tls | ternary "https" "http" ) -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "robomotion-apps.fullname" . }}
  labels:
    app: {{ template "robomotion-apps.fullname" . }}
spec:
  selector:
    matchLabels:
      app: {{ template "robomotion-apps.fullname" . }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "robomotion-apps.fullname" . }}
    spec:     
      containers:
      - name: {{ template "robomotion-apps.fullname" . }}
        image: "{{ .Values.apps.image }}:{{ .Values.apps.imageTag }}"
        ports:
        - containerPort: 80
          name: apps-http
        env:
          - name: COOKIE_DOMAIN
            value: {{ $host.name }}
          - name: ALLOW_ORIGIN
            value: {{ $host.name }}
          - name: STORE_ENDPOINT
            value: fra1.digitaloceanspaces.com
          - name: REDIS_SCHEME
            value: {{ default "redis" .Values.redis.scheme }}
          - name: REDIS_HOST
          {{- if .Values.redis.enabled }}
            value: {{ template "robomotion.redis.host" . }}
          {{- else }}
            value: {{ .Values.externalRedis.host | quote }}
          {{- end }}
          - name: REDIS_PORT
          {{- if .Values.redis.enabled }}
            value: {{ .Values.redis.redisPort | quote }}
          {{- else }}
            value: {{ .Values.externalRedis.port | quote }}
          {{- end }}
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                {{- if .Values.redis.enabled }}
                name: {{ template "robomotion.redis.fullname" . }}
                key: redis-password
                {{- else }}
                name: {{ printf "%s-%s" .Release.Name "external-redis"  }}
                key: password
                {{- end }}
          - name: POSTGRES_HOST
          {{- if .Values.postgresql.enabled }}
            value: {{ template "robomotion.postgresql.fullname" . }}
          {{- else }}
            value: {{ .Values.externalDatabase.host | quote }}
          {{- end }}
          - name: POSTGRES_PORT
          {{- if .Values.postgresql.enabled }}
            value: {{ .Values.postgresql.service.port | quote }}
          {{- else }}
            value: {{ .Values.externalDatabase.port | quote }}
          {{- end }}
          - name: POSTGRES_DB
          {{- if .Values.postgresql.enabled }}
            value: {{ .Values.postgresql.postgresqlDatabase | quote }}
          {{- else }}
            value: {{ .Values.externalDatabase.database | quote }}
          {{- end }}
          - name: POSTGRES_USER
          {{- if .Values.postgresql.enabled }}
            value: {{ .Values.postgresql.postgresqlUsername | quote }}
          {{- else }}
            value: {{ .Values.externalDatabase.user | quote }}
          {{- end }}
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                {{- if .Values.postgresql.enabled }}
                name: {{ template "robomotion.postgresql.fullname" . }}
                key: postgresql-password
                {{- else }}
                name: {{ printf "%s-%s" .Release.Name "external-db"  }}
                key: password
                {{- end }}
        volumeMounts:
        - name: kube-config-volume
          mountPath: /home/.kube/      
      volumes:
        - name: kube-config-volume
          configMap:
            name: kube-config          
      {{- if .Values.registry.secret }}
      imagePullSecrets:
      - name: {{ .Values.registry.secret }}
      {{- end }}
